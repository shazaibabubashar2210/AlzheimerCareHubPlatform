@model List<AppointmentModel>

<h2>Your Appointments</h2>

@foreach (var appointment in Model)
{
    <div class="card mb-3">
        <div class="card-body">
            <h5 class="card-title">Doctor: @appointment.Doctor</h5>
            <p class="card-text">Date: @appointment.SuggestedDate</p>
            <p class="card-text">Time: @appointment.SuggestedTime</p>
            <p class="card-text">Status: <strong>@appointment.Status</strong></p>

            <button class="btn btn-danger cancel-btn" data-id="@appointment.Id">Cancel</button>
            <button class="btn btn-warning reschedule-btn" data-id="@appointment.Id" data-toggle="modal" data-target="#rescheduleModal">Reschedule</button>
        </div>
    </div>
}

<!-- Reschedule Modal -->
<div class="modal fade" id="rescheduleModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Reschedule Appointment</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="rescheduleId">
                <label for="newDate">New Date:</label>
                <input type="date" id="newDate" class="form-control">
                <label for="newTime">New Time:</label>
                <input type="time" id="newTime" class="form-control">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirmReschedule">Confirm</button>
            </div>
        </div>
    </div>
</div>
<script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".cancel-btn").forEach(button => {
        button.addEventListener("click", async function () {
            let appointmentId = this.getAttribute("data-id");

            if (!confirm("Are you sure you want to cancel this appointment?")) return;

            try {
                const response = await fetch("/Appointment/CancelAppointment", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ Id: appointmentId })
                });

                const data = await response.json(); // Parse response

                if (response.ok) {
                    alert(data.message);
                    this.closest(".card").remove(); // Remove from UI without reload
                } else {
                    alert(`Failed to cancel: ${data.error || "Unknown error"}`);
                }
            } catch (error) {
                console.error("Error:", error);
                alert("Error canceling appointment.");
            }
        });
    });
});
</script>
<script>
        document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".reschedule-btn").forEach(button => {
            button.addEventListener("click", function () {
                let appointmentId = this.getAttribute("data-id");
                document.getElementById("rescheduleId").value = appointmentId; // Set appointment ID in modal
                $("#rescheduleModal").modal("show"); // Open Bootstrap modal
            });
        });

        document.getElementById("confirmReschedule").addEventListener("click", async function () {
            let appointmentId = document.getElementById("rescheduleId").value;
            let newDate = document.getElementById("newDate").value;
            let newTime = document.getElementById("newTime").value;

            if (!newDate || !newTime) {
                alert("Please select a valid date and time.");
                return;
            }

            try {
                const response = await fetch("/Appointment/RescheduleAppointment", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ Id: appointmentId, SuggestedDate: newDate, SuggestedTime: newTime })
                });

                if (response.ok) {
                    alert("Reschedule request sent successfully!");
                    window.location.reload();
                } else {
                    const errorData = await response.json();
                    alert(`Failed to reschedule: ${errorData.error || "Unknown error"}`);
                }
            } catch (error) {
                console.error("Error:", error);
                alert("Error rescheduling appointment.");
            }
        });
    });
</script>

